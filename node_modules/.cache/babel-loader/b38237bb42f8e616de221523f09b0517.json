{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Radio from './Form/Radio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst perguntas = [{\n  pergunta: 'Qual método é utilizado para criar componentes?',\n  options: ['React.makeComponent()', 'React.createComponent()', 'React.createElement()'],\n  resposta: 'React.createElement()',\n  id: 'p1'\n}, {\n  pergunta: 'Como importamos um componente externo?',\n  options: ['import Component from \"./Component\"', 'require(\"./Component\")', 'import \"./Component\"'],\n  resposta: 'import Component from \"./Component\"',\n  id: 'p2'\n}, {\n  pergunta: 'Qual hook não é nativo?',\n  options: ['useEffect()', 'useFetch()', 'useCallback()'],\n  resposta: 'useFetch()',\n  id: 'p3'\n}, {\n  pergunta: 'Qual palavra deve ser utilizada para criarmos um hook?',\n  options: ['set', 'get', 'use'],\n  resposta: 'use',\n  id: 'p4'\n}];\nexport const App = () => {\n  _s();\n\n  const [respostas, setRespostas] = React.useState({\n    p1: '',\n    p2: '',\n    p3: '',\n    p4: ''\n  });\n  const [slide, setSlide] = React.useState(0); // assim o slide começa com 0 (1º item)\n  // funça~resposnsavel por atribuir a resposta do usuário a cada pergunta, p1, p2, p3 e p4\n\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    // console.log(target.value) // me retorna o valor clicado\n    // console.log(target.id) // retorna o id da pergunta\n    // é a mesma cosia que p1: valorClicado\n    setRespostas({ ...respostas,\n      [target.id]: target.value\n    }); // a primeria coisa a se fazer quando modifica um objeto é desestrutura os valores dele e passar o novo valor\n    // console.log(respostas) // me mostra o objeto de respostas contendo as respostas clicadas\n  } // função responsavel por calcular a quantidade de respostas \n\n\n  function resultado() {\n    console.log('final');\n    const corretas = perguntas.filter(_ref2 => {\n      let {\n        id,\n        resposta\n      } = _ref2;\n      return (// já desestruturando o objeto e pegando apenas do que eu preciso\n        repostas\n      );\n    });\n  } // Função responsalvel por mudar o estado do slide e mudar para a próxima página\n\n\n  function handleClick() {\n    if (slide < perguntas.length - 1) {\n      // ele verifica se o slide é menor que a quantidade de perguntas para que não encha a quantidade de valores de slide desnecessariamente\n      setSlide(slide + 1);\n    } else {\n      resultado();\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // porem quando eu clico no botão que está dentro deste formulário ele avança a página e faz um reload por conta que ele envia o formulário, para evitar isso temos que previnir o evento padrão do formulário\n    _jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [perguntas.map((question, index) =>\n      /*#__PURE__*/\n      // o map permite passar duas prorpiedades até, a priemira é o valor de cada laço e o segundo é o index\n      _jsxDEV(Radio, {\n        active: slide === index // sendo ele responsavel por passar true ou false para que seja mostrado na tela\n        ,\n        id: perguntas.id,\n        value: respostas[question.id] // no value precisamos passar o nosso Reativo (respostas/useRespostas), porem precisamos passar a responsta conforme a questão correta, sendo no 'question.id' quem tem a posição de cada pergutna\n        ,\n        onChange: handleChange,\n        ...question\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Proxima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(App, \"svIcjhrzuL6nGC28zjPpMRdxaxQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Radio","perguntas","pergunta","options","resposta","id","App","respostas","setRespostas","useState","p1","p2","p3","p4","slide","setSlide","handleChange","target","value","resultado","console","log","corretas","filter","repostas","handleClick","length","e","preventDefault","map","question","index"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/App.js"],"sourcesContent":["import React from 'react';\nimport Radio from './Form/Radio';\n\nconst perguntas = [\n  {\n    pergunta: 'Qual método é utilizado para criar componentes?',\n    options: [\n      'React.makeComponent()',\n      'React.createComponent()',\n      'React.createElement()',\n    ],\n    resposta: 'React.createElement()',\n    id: 'p1',\n  },\n  {\n    pergunta: 'Como importamos um componente externo?',\n    options: [\n      'import Component from \"./Component\"',\n      'require(\"./Component\")',\n      'import \"./Component\"',\n    ],\n    resposta: 'import Component from \"./Component\"',\n    id: 'p2',\n  },\n  {\n    pergunta: 'Qual hook não é nativo?',\n    options: ['useEffect()', 'useFetch()', 'useCallback()'],\n    resposta: 'useFetch()',\n    id: 'p3',\n  },\n  {\n    pergunta: 'Qual palavra deve ser utilizada para criarmos um hook?',\n    options: ['set', 'get', 'use'],\n    resposta: 'use',\n    id: 'p4',\n  },\n];\n\nexport const App = () => {\n  const [respostas, setRespostas] = React.useState({\n    p1: '',\n    p2: '',\n    p3: '',\n    p4: '',\n  });\n  const [slide, setSlide] = React.useState(0) // assim o slide começa com 0 (1º item)\n\n  // funça~resposnsavel por atribuir a resposta do usuário a cada pergunta, p1, p2, p3 e p4\n  function handleChange({ target }) {\n    // console.log(target.value) // me retorna o valor clicado\n    // console.log(target.id) // retorna o id da pergunta\n    // é a mesma cosia que p1: valorClicado\n    setRespostas({...respostas, [target.id]: target.value }) // a primeria coisa a se fazer quando modifica um objeto é desestrutura os valores dele e passar o novo valor\n    // console.log(respostas) // me mostra o objeto de respostas contendo as respostas clicadas\n  }\n\n  // função responsavel por calcular a quantidade de respostas \n  function resultado(){\n    console.log('final')\n    const corretas = perguntas.filter(({id, resposta}) => ( // já desestruturando o objeto e pegando apenas do que eu preciso\n      repostas\n    ))\n  }\n\n\n  // Função responsalvel por mudar o estado do slide e mudar para a próxima página\n  function handleClick() {\n    if(slide < perguntas.length - 1){ // ele verifica se o slide é menor que a quantidade de perguntas para que não encha a quantidade de valores de slide desnecessariamente\n      setSlide(slide+1)\n    }else{\n      resultado()\n    }\n  }\n\n  return (\n    // porem quando eu clico no botão que está dentro deste formulário ele avança a página e faz um reload por conta que ele envia o formulário, para evitar isso temos que previnir o evento padrão do formulário\n    <form onSubmit={(e) => e.preventDefault()}>\n      {perguntas.map((question, index) => ( // o map permite passar duas prorpiedades até, a priemira é o valor de cada laço e o segundo é o index\n        <Radio\n          active={slide === index} // sendo ele responsavel por passar true ou false para que seja mostrado na tela\n          key={question.id}\n          id={perguntas.id}\n          value={respostas[question.id]} // no value precisamos passar o nosso Reativo (respostas/useRespostas), porem precisamos passar a responsta conforme a questão correta, sendo no 'question.id' quem tem a posição de cada pergutna\n          onChange={handleChange}\n          {...question}\n        />\n      ))}\n      {/* Passamndo todas as prorpiedades de perguntas para o radio */}\n      <button onClick={handleClick}>Proxima</button>\n    </form>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,iDADZ;EAEEC,OAAO,EAAE,CACP,uBADO,EAEP,yBAFO,EAGP,uBAHO,CAFX;EAOEC,QAAQ,EAAE,uBAPZ;EAQEC,EAAE,EAAE;AARN,CADgB,EAWhB;EACEH,QAAQ,EAAE,wCADZ;EAEEC,OAAO,EAAE,CACP,qCADO,EAEP,wBAFO,EAGP,sBAHO,CAFX;EAOEC,QAAQ,EAAE,qCAPZ;EAQEC,EAAE,EAAE;AARN,CAXgB,EAqBhB;EACEH,QAAQ,EAAE,yBADZ;EAEEC,OAAO,EAAE,CAAC,aAAD,EAAgB,YAAhB,EAA8B,eAA9B,CAFX;EAGEC,QAAQ,EAAE,YAHZ;EAIEC,EAAE,EAAE;AAJN,CArBgB,EA2BhB;EACEH,QAAQ,EAAE,wDADZ;EAEEC,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAFX;EAGEC,QAAQ,EAAE,KAHZ;EAIEC,EAAE,EAAE;AAJN,CA3BgB,CAAlB;AAmCA,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAAe;IAC/CC,EAAE,EAAE,EAD2C;IAE/CC,EAAE,EAAE,EAF2C;IAG/CC,EAAE,EAAE,EAH2C;IAI/CC,EAAE,EAAE;EAJ2C,CAAf,CAAlC;EAMA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACU,QAAN,CAAe,CAAf,CAA1B,CAPuB,CAOqB;EAE5C;;EACA,SAASO,YAAT,OAAkC;IAAA,IAAZ;MAAEC;IAAF,CAAY;IAChC;IACA;IACA;IACAT,YAAY,CAAC,EAAC,GAAGD,SAAJ;MAAe,CAACU,MAAM,CAACZ,EAAR,GAAaY,MAAM,CAACC;IAAnC,CAAD,CAAZ,CAJgC,CAIyB;IACzD;EACD,CAhBsB,CAkBvB;;;EACA,SAASC,SAAT,GAAoB;IAClBC,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,MAAMC,QAAQ,GAAGrB,SAAS,CAACsB,MAAV,CAAiB;MAAA,IAAC;QAAClB,EAAD;QAAKD;MAAL,CAAD;MAAA,OAAsB;QACtDoB;MADgC;IAAA,CAAjB,CAAjB;EAGD,CAxBsB,CA2BvB;;;EACA,SAASC,WAAT,GAAuB;IACrB,IAAGX,KAAK,GAAGb,SAAS,CAACyB,MAAV,GAAmB,CAA9B,EAAgC;MAAE;MAChCX,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;IACD,CAFD,MAEK;MACHK,SAAS;IACV;EACF;;EAED;IAAA;IACE;IACA;MAAM,QAAQ,EAAGQ,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAvB;MAAA,WACG3B,SAAS,CAAC4B,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX;MAAA;MAAuB;MACpC,QAAC,KAAD;QACE,MAAM,EAAEjB,KAAK,KAAKiB,KADpB,CAC2B;QAD3B;QAGE,EAAE,EAAE9B,SAAS,CAACI,EAHhB;QAIE,KAAK,EAAEE,SAAS,CAACuB,QAAQ,CAACzB,EAAV,CAJlB,CAIiC;QAJjC;QAKE,QAAQ,EAAEW,YALZ;QAAA,GAMMc;MANN,GAEOA,QAAQ,CAACzB,EAFhB;QAAA;QAAA;QAAA;MAAA,QADD,CADH,eAYE;QAAQ,OAAO,EAAEoB,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAiBD,CArDM;;GAAMnB,G;;KAAAA,G;AAuDb,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}