{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nconst useFetch = () => {\n  _s();\n\n  const [data, setData] = React.useState(null); // estado para os dados\n\n  const [error, setError] = React.useState(null); // estado para os errors\n\n  const [loading, setLoading] = React.useState(null); // estado para o loadding\n  // fazedno um função de request, para idenpende do momento, oa clicar em um botão, quando o componente montar ele conseguir acessar independente do momento\n\n  async function request(url, options) {\n    s; // passando a url e as opções, para quando se quer fazer um POST, GET, DELETE, etc\n\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData(json);\n  }\n\n  return {\n    data,\n    error,\n    loading,\n    request\n  }; // retornando como objeto por conta que quando eu for utilizar eles, eu terei que desestruturar na ordem correta, já quando eu eretorno como objeto eu só coloco o nome\n};\n\n_s(useFetch, \"pIGb0cL0LVrxpU0GUqNo0IH6dXw=\");\n\nexport default useFetch;","map":{"version":3,"names":["React","useFetch","data","setData","useState","error","setError","loading","setLoading","request","url","options","s","response","fetch","json"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/useFetch.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst useFetch = () => {\r\n  const [data, setData] = React.useState(null); // estado para os dados\r\n  const [error, setError] = React.useState(null); // estado para os errors\r\n  const [loading, setLoading] = React.useState(null); // estado para o loadding\r\n\r\n  // fazedno um função de request, para idenpende do momento, oa clicar em um botão, quando o componente montar ele conseguir acessar independente do momento\r\n  async function request(url, options) {s\r\n    // passando a url e as opções, para quando se quer fazer um POST, GET, DELETE, etc\r\n    const response = await fetch(url, options);\r\n    const json = await response.json();\r\n    setData(json);\r\n  }\r\n\r\n  return { data, error, loading, request }; // retornando como objeto por conta que quando eu for utilizar eles, eu terei que desestruturar na ordem correta, já quando eu eretorno como objeto eu só coloco o nome\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAxB,CADqB,CACyB;;EAC9C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B,CAFqB,CAE2B;;EAChD,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B,CAHqB,CAG+B;EAEpD;;EACA,eAAeK,OAAf,CAAuBC,GAAvB,EAA4BC,OAA5B,EAAqC;IAACC,CAAC,CAAF,CACnC;;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAA5B;IACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;IACAZ,OAAO,CAACY,IAAD,CAAP;EACD;;EAED,OAAO;IAAEb,IAAF;IAAQG,KAAR;IAAeE,OAAf;IAAwBE;EAAxB,CAAP,CAbqB,CAaqB;AAC3C,CAdD;;GAAMR,Q;;AAgBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}