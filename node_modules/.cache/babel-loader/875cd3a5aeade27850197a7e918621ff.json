{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst coresArray = ['azul', 'roxo', 'laranja', 'verde', 'vermelho', 'cinza'];\n\nconst App = () => {\n  _s();\n\n  const [cores, setCores] = React.useState(['azul']);\n\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n\n    if (target.checked) {\n      setCores([...cores, target.value]);\n    } else {\n      setCores(cores.filter(callback => {\n        // Passando um callback como retorno\n        console.log(callback); // sempre que eu desmarco um item ele aciona esse console.log com a cor desmarcada\n\n        return callback !== target.value; // se ele retornar isso quer dizer que 'callbak' não é a checada\n        // nessa logica, ele retorna no 'return' a variavel 'callback' (que é a opção não checada) é diferente de 'target.value' que é a opção checada, assim removendo da array os valores não checados\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: coresArray.map(cor => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: cor,\n          checked: cores.includes(cor),\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), ' ', cor]\n      }, cor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"wmpD1oC48fRzY5RvRB0SIgGn850=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","coresArray","App","cores","setCores","useState","handleChange","target","checked","value","filter","callback","console","log","map","cor","includes"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/App.js"],"sourcesContent":["import React from 'react';\n\nconst coresArray = ['azul', 'roxo', 'laranja', 'verde', 'vermelho', 'cinza'];\n\nconst App = () => {\n  const [cores, setCores] = React.useState(['azul']);\n\n  function handleChange({ target }) {\n    if (target.checked) {\n      setCores([...cores, target.value]);\n    } else {\n      setCores(\n        cores.filter((callback) => {\n          // Passando um callback como retorno\n          console.log(callback); // sempre que eu desmarco um item ele aciona esse console.log com a cor desmarcada\n          return callback !== target.value; // se ele retornar isso quer dizer que 'callbak' não é a checada\n          // nessa logica, ele retorna no 'return' a variavel 'callback' (que é a opção não checada) é diferente de 'target.value' que é a opção checada, assim removendo da array os valores não checados\n        }),\n      );\n    }\n  }\n\n\n  return (\n    <>\n      <form>\n        {coresArray.map((cor) => (\n          <label key={cor}>\n            <input\n              type=\"checkbox\"\n              value={cor}\n              checked={cores.includes(cor)}\n              onChange={handleChange}\n            />{' '}\n            {cor}\n          </label>\n        ))}\n\n      </form>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EAA4B,OAA5B,EAAqC,UAArC,EAAiD,OAAjD,CAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,CAAC,MAAD,CAAf,CAA1B;;EAEA,SAASC,YAAT,OAAkC;IAAA,IAAZ;MAAEC;IAAF,CAAY;;IAChC,IAAIA,MAAM,CAACC,OAAX,EAAoB;MAClBJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,MAAM,CAACE,KAAlB,CAAD,CAAR;IACD,CAFD,MAEO;MACLL,QAAQ,CACND,KAAK,CAACO,MAAN,CAAcC,QAAD,IAAc;QACzB;QACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFyB,CAEF;;QACvB,OAAOA,QAAQ,KAAKJ,MAAM,CAACE,KAA3B,CAHyB,CAGS;QAClC;MACD,CALD,CADM,CAAR;IAQD;EACF;;EAGD,oBACE;IAAA,uBACE;MAAA,UACGR,UAAU,CAACa,GAAX,CAAgBC,GAAD,iBACd;QAAA,wBACE;UACE,IAAI,EAAC,UADP;UAEE,KAAK,EAAEA,GAFT;UAGE,OAAO,EAAEZ,KAAK,CAACa,QAAN,CAAeD,GAAf,CAHX;UAIE,QAAQ,EAAET;QAJZ;UAAA;UAAA;UAAA;QAAA,QADF,EAMK,GANL,EAOGS,GAPH;MAAA,GAAYA,GAAZ;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAkBD,CArCD;;GAAMb,G;;KAAAA,G;AAuCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}