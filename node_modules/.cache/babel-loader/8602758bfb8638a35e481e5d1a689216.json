{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\Form\\\\Input.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    id,\n    label,\n    onChage,\n    value,\n    // setValue,\n    type,\n    onBlur,\n    placeholder,\n    error\n  } = _ref;\n  // desestruturand tudo que irei utiliar invez de espalhar as props, par aque não de um erro e ele espalhe o setValue indevidaemnte\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: id,\n      id: id,\n      onChange: onChage // neste caso expecifico do CEP, temo que fazer uma verificação após o usuário ter mudado campo depois da priemira vez\n      ,\n      placeholder: placeholder,\n      onBlur: onBlur,\n      type: type,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Input","id","label","onChage","value","type","onBlur","placeholder","error"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/Form/Input.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Input = ({\r\n  id,\r\n  label,\r\n  onChage,\r\n  value,\r\n  // setValue,\r\n  type,\r\n  onBlur,\r\n  placeholder,\r\n  error,\r\n}) => {\r\n  // desestruturand tudo que irei utiliar invez de espalhar as props, par aque não de um erro e ele espalhe o setValue indevidaemnte\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        name={id}\r\n        id={id}\r\n        onChange={onChage} // neste caso expecifico do CEP, temo que fazer uma verificação após o usuário ter mudado campo depois da priemira vez\r\n        placeholder={placeholder}\r\n        onBlur={onBlur}\r\n        type={type}\r\n        value={value}\r\n      />\r\n      {error && <p>{error}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,QAUR;EAAA,IAVS;IACbC,EADa;IAEbC,KAFa;IAGbC,OAHa;IAIbC,KAJa;IAKb;IACAC,IANa;IAObC,MAPa;IAQbC,WARa;IASbC;EATa,CAUT;EACJ;EAEA,oBACE;IAAA,wBACE;MAAO,OAAO,EAAEP,EAAhB;MAAA,UAAqBC;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,IAAI,EAAC,MADP;MAEE,IAAI,EAAED,EAFR;MAGE,EAAE,EAAEA,EAHN;MAIE,QAAQ,EAAEE,OAJZ,CAIqB;MAJrB;MAKE,WAAW,EAAEI,WALf;MAME,MAAM,EAAED,MANV;MAOE,IAAI,EAAED,IAPR;MAQE,KAAK,EAAED;IART;MAAA;MAAA;MAAA;IAAA,QAFF,EAYGI,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAZZ;EAAA,gBADF;AAgBD,CA7BD;;KAAMR,K;AA+BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}