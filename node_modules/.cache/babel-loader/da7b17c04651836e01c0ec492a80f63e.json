{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\Form\\\\Input.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    id,\n    label,\n    value,\n    onChage,\n    setValue,\n    ...props\n  } = _ref;\n  // invés de ficar passando o restante das prorpiedades um por um, podemos usar o rest operator e passar o restante\n  // recebendo as propriedades como parametro e desestruturando elas\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: id,\n      id: id,\n      value: value,\n      onChange: onChage // neste caso expecifico do CEP, temo que fazer uma verificação após o estado \n      ,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Input","id","label","value","onChage","setValue","props"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/Form/Input.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Input = ({ id, label, value, onChage, setValue, ...props }) => {\r\n  // invés de ficar passando o restante das prorpiedades um por um, podemos usar o rest operator e passar o restante\r\n  // recebendo as propriedades como parametro e desestruturando elas\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        name={id}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChage} // neste caso expecifico do CEP, temo que fazer uma verificação após o estado \r\n        {...props} \r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,QAAuD;EAAA,IAAtD;IAAEC,EAAF;IAAMC,KAAN;IAAaC,KAAb;IAAoBC,OAApB;IAA6BC,QAA7B;IAAuC,GAAGC;EAA1C,CAAsD;EACnE;EACA;EACA,oBACE;IAAA,wBACE;MAAO,OAAO,EAAEL,EAAhB;MAAA,UAAqBC;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,IAAI,EAAC,MADP;MAEE,IAAI,EAAED,EAFR;MAGE,EAAE,EAAEA,EAHN;MAIE,KAAK,EAAEE,KAJT;MAKE,QAAQ,EAAEC,OALZ,CAKqB;MALrB;MAAA,GAMME;IANN;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAaD,CAhBD;;KAAMN,K;AAkBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}