{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\Form\\\\CheckBox.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBox = _ref => {\n  let {\n    options,\n    value,\n    setValue\n  } = _ref;\n\n  function handleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n\n    if (target.checked) {\n      // verifico se aoguma opção está checada\n      setValue([...value, target.value]); // passando todos os valores antigos com o spreed e depois passando o novo valor\n    } else {\n      // para remover o valor não checado da array caso tenha\n      setValue(value.filter(itemValue => itemValue !== target.value)); // apenas fazendo essa verificação ele irá filtar os valores (os 'itemValue')que não diferentes do\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), \" \", option]\n    }, option, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["React","CheckBox","options","value","setValue","handleChange","target","checked","filter","itemValue","map","option"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/Form/CheckBox.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CheckBox = ({ options, value, setValue }) => {\r\n  function handleChange({target}){\r\n    if(target.checked){ // verifico se aoguma opção está checada\r\n      setValue([...value, target.value]) // passando todos os valores antigos com o spreed e depois passando o novo valor\r\n    }else { // para remover o valor não checado da array caso tenha\r\n      setValue(value.filter((itemValue) => itemValue !== target.value)) // apenas fazendo essa verificação ele irá filtar os valores (os 'itemValue')que não diferentes do\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {options.map((option) => (\r\n        <label key={option}>\r\n          <input type=\"checkbox\" value={options} /> {option}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAkC;EAAA,IAAjC;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,CAAiC;;EACjD,SAASC,YAAT,QAA+B;IAAA,IAAT;MAACC;IAAD,CAAS;;IAC7B,IAAGA,MAAM,CAACC,OAAV,EAAkB;MAAE;MAClBH,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,MAAM,CAACH,KAAlB,CAAD,CAAR,CADgB,CACmB;IACpC,CAFD,MAEM;MAAE;MACNC,QAAQ,CAACD,KAAK,CAACK,MAAN,CAAcC,SAAD,IAAeA,SAAS,KAAKH,MAAM,CAACH,KAAjD,CAAD,CAAR,CADI,CAC8D;IACnE;EACF;;EAED,oBACE;IAAA,UACGD,OAAO,CAACQ,GAAR,CAAaC,MAAD,iBACX;MAAA,wBACE;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAET;MAA9B;QAAA;QAAA;QAAA;MAAA,QADF,OAC6CS,MAD7C;IAAA,GAAYA,MAAZ;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAlBD;;KAAMV,Q;AAoBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}