{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KLusvarghi\\\\Documents\\\\CURSOS\\\\C\\xF3digos de estudo\\\\Cursos de Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\Form\\\\Input.js\";\nimport React from 'react'; // desestruturando a label para invez de usar \"props.label\" podemos utilizar só o nome label ou id\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    label,\n    id,\n    ...props\n  } = _ref;\n  // todos as outras pripriedades estaram dentro de \"props\"\n  // \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    syyle: {\n      margin: '1rem 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"text\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}; // const Input = (props) => { // desestruturando a label, querendo então passar o nome dela\n//   return (\n//     <div syyle={{ margin:'1rem 0' }}>\n//       <label htmlFor={props.id}>{props.label}</label>\n//       <input id={props.id} type=\"text\"/>\n//     </div>\n//   )\n// }\n\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Input","label","id","props","margin"],"sources":["C:/Users/KLusvarghi/Documents/CURSOS/Códigos de estudo/Cursos de Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/Form/Input.js"],"sourcesContent":["import React from 'react'\r\n\r\n// desestruturando a label para invez de usar \"props.label\" podemos utilizar só o nome label ou id\r\nconst Input = ({label, id, ...props}) => { // todos as outras pripriedades estaram dentro de \"props\"\r\n  // \r\n  return (\r\n    <div syyle={{ margin:'1rem 0' }}>\r\n      <label htmlFor={id}>{label}</label>\r\n      <input id={id} type=\"text\" {...props}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const Input = (props) => { // desestruturando a label, querendo então passar o nome dela\r\n//   return (\r\n//     <div syyle={{ margin:'1rem 0' }}>\r\n//       <label htmlFor={props.id}>{props.label}</label>\r\n//       <input id={props.id} type=\"text\"/>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,QAA2B;EAAA,IAA1B;IAACC,KAAD;IAAQC,EAAR;IAAY,GAAGC;EAAf,CAA0B;EAAE;EACzC;EACA,oBACE;IAAK,KAAK,EAAE;MAAEC,MAAM,EAAC;IAAT,CAAZ;IAAA,wBACE;MAAO,OAAO,EAAEF,EAAhB;MAAA,UAAqBD;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,EAAE,EAAEC,EAAX;MAAe,IAAI,EAAC,MAApB;MAAA,GAA+BC;IAA/B;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAjBMH,K;AAmBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}