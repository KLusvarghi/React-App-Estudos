{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Input from './Form/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [cep, setCep] = React.useState('');\n  const [error, setError] = React.useState(null);\n\n  function validateCep(value) {\n    // recebendo com oparemetro o valor digitado pelo usuário\n    console.log(value);\n\n    if (value.length === 0) {\n      setError('Preencha um valor!');\n      return false;\n    } else if (!/^\\d{5}-?\\d{3}$/.test(value)) {\n      // se a validação for falsa ele entra no escopo\n      // o método 'test' irá verifica se o que foi digitado pelo usuário (target.value) condiz com o regex passado\n      // console.log(validacao)\n      // verifica se o valor digitado é válido\n      // aqui ele verifica se há 5 digitos, depois verifica se tem '-', porem sendo opcioanl porconta do ponto de \"?\" que vem em sua sequencia, e por ultimo verifica se há mais 3 digitos em sequencia\n      // porem precismaos dizer que ele começa com 5 digitos utiizando o \"^\" e para dizer que termina com 3 digitos usamos \"$\"\n      setError('Preencha um valor válido!');\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function handleBlur(_ref) {\n    let {\n      target\n    } = _ref;\n    validateCep(target.value);\n  }\n\n  function hancleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n    // if(error) validateCep(target.value) // se caso já existir um erro, ele faz a verificação novamente\n    setCep(target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"CEP\",\n        id: \"cep\",\n        placeholder: \"00000-000\",\n        value: cep,\n        onChange: hancleChange,\n        setValue: setCep,\n        onBlur: handleBlur // sendo o unBlur um evento que sem,rpe será ativado quando ele for focado e desfocado, quando ele desfoca ele executa\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"N0m8R/CQlbZVtOqZf+Q4n0oD/gw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Input","App","cep","setCep","useState","error","setError","validateCep","value","console","log","length","test","handleBlur","target","hancleChange"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/App.js"],"sourcesContent":["import React from 'react';\nimport Input from './Form/Input';\n\nexport const App = () => {\n  const [cep, setCep] = React.useState('');\n  const [error, setError] = React.useState(null);\n\n  function validateCep(value) {\n    // recebendo com oparemetro o valor digitado pelo usuário\n    console.log(value);\n    if (value.length === 0) {\n      setError('Preencha um valor!');\n      return false;\n    } else if (!/^\\d{5}-?\\d{3}$/.test(value)) {\n      // se a validação for falsa ele entra no escopo\n      // o método 'test' irá verifica se o que foi digitado pelo usuário (target.value) condiz com o regex passado\n      // console.log(validacao)\n      // verifica se o valor digitado é válido\n      // aqui ele verifica se há 5 digitos, depois verifica se tem '-', porem sendo opcioanl porconta do ponto de \"?\" que vem em sua sequencia, e por ultimo verifica se há mais 3 digitos em sequencia\n      // porem precismaos dizer que ele começa com 5 digitos utiizando o \"^\" e para dizer que termina com 3 digitos usamos \"$\"\n      setError('Preencha um valor válido!');\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function handleBlur({ target }) {\n    validateCep(target.value);\n  }\n\n  function hancleChange({target}) {\n    // if(error) validateCep(target.value) // se caso já existir um erro, ele faz a verificação novamente\n    setCep(target.value)\n  }\n\n  return (\n    <>\n      <form>\n        <Input\n          type=\"text\"\n          label=\"CEP\"\n          id=\"cep\"\n          placeholder=\"00000-000\"\n          value={cep}\n          onChange={hancleChange}\n          setValue={setCep}\n          onBlur={handleBlur} // sendo o unBlur um evento que sem,rpe será ativado quando ele for focado e desfocado, quando ele desfoca ele executa\n        />\n        <p>{cep}</p>\n        {error && <p>{error}</p>}\n        <button>Enviar</button>\n      </form>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAtB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACK,QAAN,CAAe,IAAf,CAA1B;;EAEA,SAASG,WAAT,CAAqBC,KAArB,EAA4B;IAC1B;IACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;;IACA,IAAIA,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;MACtBL,QAAQ,CAAC,oBAAD,CAAR;MACA,OAAO,KAAP;IACD,CAHD,MAGO,IAAI,CAAC,iBAAiBM,IAAjB,CAAsBJ,KAAtB,CAAL,EAAmC;MACxC;MACA;MACA;MACA;MACA;MACA;MACAF,QAAQ,CAAC,2BAAD,CAAR;MACA,OAAO,KAAP;IACD,CATM,MASA;MACLA,QAAQ,CAAC,IAAD,CAAR;MACA,OAAO,IAAP;IACD;EACF;;EAED,SAASO,UAAT,OAAgC;IAAA,IAAZ;MAAEC;IAAF,CAAY;IAC9BP,WAAW,CAACO,MAAM,CAACN,KAAR,CAAX;EACD;;EAED,SAASO,YAAT,QAAgC;IAAA,IAAV;MAACD;IAAD,CAAU;IAC9B;IACAX,MAAM,CAACW,MAAM,CAACN,KAAR,CAAN;EACD;;EAED,oBACE;IAAA,uBACE;MAAA,wBACE,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAC,KAFR;QAGE,EAAE,EAAC,KAHL;QAIE,WAAW,EAAC,WAJd;QAKE,KAAK,EAAEN,GALT;QAME,QAAQ,EAAEa,YANZ;QAOE,QAAQ,EAAEZ,MAPZ;QAQE,MAAM,EAAEU,UARV,CAQsB;;MARtB;QAAA;QAAA;QAAA;MAAA,QADF,eAWE;QAAA,UAAIX;MAAJ;QAAA;QAAA;QAAA;MAAA,QAXF,EAYGG,KAAK,iBAAI;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAZZ,eAaE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAmBD,CArDM;;GAAMJ,G;;KAAAA,G;AAuDb,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}