{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kaua-Lusvarghi\\\\Cursos-Programa\\xE7\\xE3o\\\\C\\xF3digo-Estudos\\\\Cursos_Programa\\xE7\\xE3o\\\\React\\\\React - Origamid\\\\Projeto-react-estudos\\\\appreact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Input from './Form/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [cep, setCep] = React.useState('');\n  const [error, setError] = React.useState('');\n\n  function handleBlur(_ref) {\n    let {\n      target\n    } = _ref;\n    const regex = /^\\d{5}-?\\d{3}$/; // aqui ele verifica se há 5 digitos, depois verifica se tem '-', porem sendo opcioanl porconta do ponto de \"?\" que vem em sua sequencia, e por ultimo verifica se há mais 3 digitos em sequencia\n    // porem precismaos dizer que ele começa com 5 digitos utiizando o \"^\" e para dizer que termina com 3 digitos usamos \"$\"\n\n    const validacao = regex.test(target.value); // o método 'test' irá verifica se o que foi digitado pelo usuário (target.value) condiz com o regex passado\n\n    console.log(validacao);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"CEP\",\n        id: \"cep\",\n        placeholder: \"00000-000\",\n        value: cep,\n        setValue: setCep,\n        onBlur: handleBlur // sendo o unBlur um evento que sem,rpe será ativado quando ele for focado e desfocado, quando ele desfoca ele executa \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: cep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"PBMeTETN3h9vZYb6mpfDt4sveRA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Input","App","cep","setCep","useState","error","setError","handleBlur","target","regex","validacao","test","value","console","log"],"sources":["C:/Kaua-Lusvarghi/Cursos-Programação/Código-Estudos/Cursos_Programação/React/React - Origamid/Projeto-react-estudos/appreact/src/App.js"],"sourcesContent":["import React from 'react';\nimport Input from './Form/Input';\n\nexport const App = () => {\n  const [cep, setCep] = React.useState('');\n  const [error, setError] = React.useState('')\n\n\n  function handleBlur({target}){\n    const regex = /^\\d{5}-?\\d{3}$/; // aqui ele verifica se há 5 digitos, depois verifica se tem '-', porem sendo opcioanl porconta do ponto de \"?\" que vem em sua sequencia, e por ultimo verifica se há mais 3 digitos em sequencia\n    // porem precismaos dizer que ele começa com 5 digitos utiizando o \"^\" e para dizer que termina com 3 digitos usamos \"$\"\n\n\n    const validacao = regex.test(target.value) // o método 'test' irá verifica se o que foi digitado pelo usuário (target.value) condiz com o regex passado\n    console.log(validacao)\n  }\n\n  return (\n    <>\n      <form>\n        <Input\n          type=\"text\"\n          label=\"CEP\"\n          id=\"cep\"\n          placeholder=\"00000-000\"\n          value={cep}\n          setValue={setCep}\n          onBlur={handleBlur} // sendo o unBlur um evento que sem,rpe será ativado quando ele for focado e desfocado, quando ele desfoca ele executa \n        />\n      {/* {if(validacao) && <p>wdw</p>} */}\n      <button>Enviar</button>\n      </form>\n      <p>{cep}</p>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAtB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;;EAGA,SAASG,UAAT,OAA6B;IAAA,IAAT;MAACC;IAAD,CAAS;IAC3B,MAAMC,KAAK,GAAG,gBAAd,CAD2B,CACK;IAChC;;IAGA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAN,CAAWH,MAAM,CAACI,KAAlB,CAAlB,CAL2B,CAKgB;;IAC3CC,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EACD;;EAED,oBACE;IAAA,wBACE;MAAA,wBACE,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAC,KAFR;QAGE,EAAE,EAAC,KAHL;QAIE,WAAW,EAAC,WAJd;QAKE,KAAK,EAAER,GALT;QAME,QAAQ,EAAEC,MANZ;QAOE,MAAM,EAAEI,UAPV,CAOsB;;MAPtB;QAAA;QAAA;QAAA;MAAA,QADF,eAWA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAA,UAAIL;IAAJ;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA,gBADF;AAkBD,CAhCM;;GAAMD,G;;KAAAA,G;AAkCb,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}